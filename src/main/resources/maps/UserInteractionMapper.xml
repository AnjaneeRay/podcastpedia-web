<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.podcastpedia.web.userinteraction.UserInteractionDao">
<!-- org.podcastpedia.web.podcasts.PodcastDao  com.pcm.mybatis.mappers.PodcastMapper
  <cache />
  <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
-->
	

    <insert id="insertSuggestedPodcast" parameterType="SuggestedPodcast" >
		INSERT into ui_suggested_podcasts 
			(
				feed_url, 
				metadata_line,
				insertion_date,
				message,
				email,
				name							
			)
	    VALUES
	      	(
	      		#{feedUrl}, 
	      		#{metadataLine},  
	      		#{insertionDate},
	      		#{message},
	      		#{email},
	      		#{name}
	      	)
  	</insert>
  	
    <insert id="insertContactMessage" parameterType="ContactForm" >
		INSERT into ui_contact_messages 
			(
				name, 
				email, 
				message, 
				topic,
				submission_date								
			)
	    VALUES
	      	(
	      		#{name}, 
	      		#{email}, 
	      		#{message}, 
	      		#{topic},
	      		#{submissionDate}
	      	)
  	</insert>  
     	
  <select id="isSubscriptionForEmail" resultType="Integer" parameterType="hashmap">
	SELECT 
		1
	FROM subscriptions
	WHERE
	  podcast_id = #{podcastId}
	  AND email = #{email};
  </select> 
       	
    <insert id="insertSubscription" parameterType="Subscription">
		INSERT IGNORE INTO subscriptions
			(
				email,
				podcast_id,
				subscription_date							
			)
	    VALUES
	      	(
	      		#{email},
	      		#{podcastId},
	      		#{subscriptionDate}
	      	)
  	</insert>
  	
    <insert id="insertRatingForPodcast" parameterType="Rating">
		REPLACE INTO ratings
			(
				podcast_id,
				email,
				rating,
				rating_date							
			)
	    VALUES
	      	(
	      		#{podcastId},
	      		#{email},
	      		#{rating},	      		
	      		#{ratingDate}
	      	)
  	</insert>  	
   	
    <insert id="insertRatingForEpisode" parameterType="Rating">
		REPLACE INTO ratings
			(
				podcast_id,
				episode_id,
				email,
				rating,
				rating_date							
			)
	    VALUES
	      	(
	      		#{podcastId},
	      		#{episodeId},
	      		#{email},
	      		#{rating},	      		
	      		#{ratingDate}
	      	)
  	</insert>   	
  	
    <insert id="insertRating" parameterType="Rating">
		REPLACE INTO ratings
			(
				podcast_id,
				episode_id,
				email,
				rating,
				rating_date							
			)
	    VALUES
	      	(
	      		#{podcastId},
	      		#{episodeId},
	      		#{email},
	      		#{rating},	      		
	      		#{ratingDate}
	      	)
  	</insert> 
  	  	
  <select id="selectRatingForEmail" resultType="Integer" parameterType="hashmap">
	SELECT 
		rating 
	FROM ratings
	WHERE
	  podcast_id = #{podcastId}
	  AND email = #{email}
	  AND episode_id = #{episodeId}; 
  </select>  
     	  		     	  
</mapper>